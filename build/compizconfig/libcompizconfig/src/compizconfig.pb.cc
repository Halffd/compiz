// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compizconfig.proto
// Protobuf C++ Version: 5.29.2

#include "compizconfig.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace metadata {

inline constexpr PluginInfo_Dependencies::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : after_plugin_{},
        before_plugin_{},
        require_plugin_{},
        require_feature_{},
        conflict_plugin_{},
        conflict_feature_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PluginInfo_Dependencies::PluginInfo_Dependencies(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PluginInfo_DependenciesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PluginInfo_DependenciesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PluginInfo_DependenciesDefaultTypeInternal() {}
  union {
    PluginInfo_Dependencies _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PluginInfo_DependenciesDefaultTypeInternal _PluginInfo_Dependencies_default_instance_;

inline constexpr Plugin_Option_StringRestriction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Plugin_Option_StringRestriction::Plugin_Option_StringRestriction(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Plugin_Option_StringRestrictionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Plugin_Option_StringRestrictionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Plugin_Option_StringRestrictionDefaultTypeInternal() {}
  union {
    Plugin_Option_StringRestriction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Plugin_Option_StringRestrictionDefaultTypeInternal _Plugin_Option_StringRestriction_default_instance_;

inline constexpr Plugin_Option_IntDescription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Plugin_Option_IntDescription::Plugin_Option_IntDescription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Plugin_Option_IntDescriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Plugin_Option_IntDescriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Plugin_Option_IntDescriptionDefaultTypeInternal() {}
  union {
    Plugin_Option_IntDescription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Plugin_Option_IntDescriptionDefaultTypeInternal _Plugin_Option_IntDescription_default_instance_;

inline constexpr Plugin_Option_ColorValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        red_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        green_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blue_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alpha_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Plugin_Option_ColorValue::Plugin_Option_ColorValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Plugin_Option_ColorValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Plugin_Option_ColorValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Plugin_Option_ColorValueDefaultTypeInternal() {}
  union {
    Plugin_Option_ColorValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Plugin_Option_ColorValueDefaultTypeInternal _Plugin_Option_ColorValue_default_instance_;

inline constexpr PluginInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        feature_{},
        locale_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        short_desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        long_desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        deps_{nullptr},
        time_{::uint64_t{0u}},
        pb_abi_version_{0},
        brief_metadata_{false},
        basic_metadata_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PluginInfo::PluginInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PluginInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PluginInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PluginInfoDefaultTypeInternal() {}
  union {
    PluginInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PluginInfoDefaultTypeInternal _PluginInfo_default_instance_;

inline constexpr Plugin_Option_GenericValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        string_value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        color_value_{nullptr},
        bool_value_{false},
        int_value_{0},
        float_value_{0},
        edge_value_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Plugin_Option_GenericValue::Plugin_Option_GenericValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Plugin_Option_GenericValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Plugin_Option_GenericValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Plugin_Option_GenericValueDefaultTypeInternal() {}
  union {
    Plugin_Option_GenericValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Plugin_Option_GenericValueDefaultTypeInternal _Plugin_Option_GenericValue_default_instance_;

inline constexpr Plugin_Extension::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_option_{},
        str_restriction_{},
        base_plugin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Plugin_Extension::Plugin_Extension(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Plugin_ExtensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Plugin_ExtensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Plugin_ExtensionDefaultTypeInternal() {}
  union {
    Plugin_Extension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Plugin_ExtensionDefaultTypeInternal _Plugin_Extension_default_instance_;

inline constexpr PluginBrief::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PluginBrief::PluginBrief(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PluginBriefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PluginBriefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PluginBriefDefaultTypeInternal() {}
  union {
    PluginBrief _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PluginBriefDefaultTypeInternal _PluginBrief_default_instance_;

inline constexpr Plugin_Option::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        default_value_{},
        int_desc_{},
        str_restriction_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        short_desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        long_desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hints_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::metadata::Plugin_Option_Type >(0)},
        list_type_{static_cast< ::metadata::Plugin_Option_Type >(0)},
        int_min_{0},
        int_max_{0},
        read_only_{false},
        extensible_{false},
        passive_grab_{false},
        internal_{false},
        float_min_{0},
        float_max_{0},
        precision_{0},
        nodelay_{false},
        sort_start_{-1},
        group_id_{-1},
        subgroup_id_{-1} {}

template <typename>
PROTOBUF_CONSTEXPR Plugin_Option::Plugin_Option(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Plugin_OptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Plugin_OptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Plugin_OptionDefaultTypeInternal() {}
  union {
    Plugin_Option _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Plugin_OptionDefaultTypeInternal _Plugin_Option_default_instance_;

inline constexpr Plugin_Screen::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : option_{},
        group_desc_{},
        subgroup_desc_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Plugin_Screen::Plugin_Screen(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Plugin_ScreenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Plugin_ScreenDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Plugin_ScreenDefaultTypeInternal() {}
  union {
    Plugin_Screen _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Plugin_ScreenDefaultTypeInternal _Plugin_Screen_default_instance_;

inline constexpr Plugin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extension_{},
        info_{nullptr},
        screen_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Plugin::Plugin(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PluginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PluginDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PluginDefaultTypeInternal() {}
  union {
    Plugin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PluginDefaultTypeInternal _Plugin_default_instance_;
}  // namespace metadata
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_compizconfig_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_compizconfig_2eproto = nullptr;
const ::uint32_t
    TableStruct_compizconfig_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo_Dependencies, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo_Dependencies, _impl_.after_plugin_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo_Dependencies, _impl_.before_plugin_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo_Dependencies, _impl_.require_plugin_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo_Dependencies, _impl_.require_feature_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo_Dependencies, _impl_.conflict_plugin_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo_Dependencies, _impl_.conflict_feature_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _impl_.pb_abi_version_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _impl_.locale_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _impl_.brief_metadata_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _impl_.basic_metadata_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _impl_.short_desc_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _impl_.long_desc_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _impl_.feature_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginInfo, _impl_.deps_),
        7,
        0,
        6,
        8,
        9,
        1,
        2,
        3,
        4,
        ~0u,
        5,
        PROTOBUF_FIELD_OFFSET(::metadata::PluginBrief, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::metadata::PluginBrief, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::metadata::PluginBrief, _impl_.info_),
        0,
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_ColorValue, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_ColorValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_ColorValue, _impl_.red_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_ColorValue, _impl_.green_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_ColorValue, _impl_.blue_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_ColorValue, _impl_.alpha_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_GenericValue, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_GenericValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_GenericValue, _impl_.bool_value_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_GenericValue, _impl_.int_value_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_GenericValue, _impl_.float_value_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_GenericValue, _impl_.color_value_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_GenericValue, _impl_.edge_value_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_GenericValue, _impl_.string_value_),
        2,
        3,
        4,
        1,
        5,
        0,
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_IntDescription, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_IntDescription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_IntDescription, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_IntDescription, _impl_.name_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_StringRestriction, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_StringRestriction, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_StringRestriction, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option_StringRestriction, _impl_.name_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.list_type_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.short_desc_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.long_desc_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.group_id_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.subgroup_id_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.read_only_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.extensible_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.sort_start_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.default_value_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.int_min_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.int_max_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.int_desc_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.float_min_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.float_max_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.precision_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.str_restriction_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.hints_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.passive_grab_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.internal_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Option, _impl_.nodelay_),
        0,
        4,
        5,
        1,
        2,
        17,
        18,
        8,
        9,
        16,
        ~0u,
        6,
        7,
        ~0u,
        12,
        13,
        14,
        ~0u,
        3,
        10,
        11,
        15,
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Extension, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Extension, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Extension, _impl_.base_plugin_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Extension, _impl_.base_option_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Extension, _impl_.str_restriction_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Screen, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Screen, _impl_.option_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Screen, _impl_.group_desc_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin_Screen, _impl_.subgroup_desc_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin, _impl_.screen_),
        PROTOBUF_FIELD_OFFSET(::metadata::Plugin, _impl_.extension_),
        0,
        1,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::metadata::PluginInfo_Dependencies)},
        {14, 33, -1, sizeof(::metadata::PluginInfo)},
        {44, 53, -1, sizeof(::metadata::PluginBrief)},
        {54, 66, -1, sizeof(::metadata::Plugin_Option_ColorValue)},
        {70, 84, -1, sizeof(::metadata::Plugin_Option_GenericValue)},
        {90, 100, -1, sizeof(::metadata::Plugin_Option_IntDescription)},
        {102, 112, -1, sizeof(::metadata::Plugin_Option_StringRestriction)},
        {114, 144, -1, sizeof(::metadata::Plugin_Option)},
        {166, 177, -1, sizeof(::metadata::Plugin_Extension)},
        {180, -1, -1, sizeof(::metadata::Plugin_Screen)},
        {191, 202, -1, sizeof(::metadata::Plugin)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::metadata::_PluginInfo_Dependencies_default_instance_._instance,
    &::metadata::_PluginInfo_default_instance_._instance,
    &::metadata::_PluginBrief_default_instance_._instance,
    &::metadata::_Plugin_Option_ColorValue_default_instance_._instance,
    &::metadata::_Plugin_Option_GenericValue_default_instance_._instance,
    &::metadata::_Plugin_Option_IntDescription_default_instance_._instance,
    &::metadata::_Plugin_Option_StringRestriction_default_instance_._instance,
    &::metadata::_Plugin_Option_default_instance_._instance,
    &::metadata::_Plugin_Extension_default_instance_._instance,
    &::metadata::_Plugin_Screen_default_instance_._instance,
    &::metadata::_Plugin_default_instance_._instance,
};
const char descriptor_table_protodef_compizconfig_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022compizconfig.proto\022\010metadata\"\235\003\n\nPlugi"
    "nInfo\022\026\n\016pb_abi_version\030\001 \002(\021\022\016\n\006locale\030"
    "\002 \002(\t\022\014\n\004time\030\003 \002(\004\022\026\n\016brief_metadata\030\004 "
    "\002(\010\022\026\n\016basic_metadata\030\005 \002(\010\022\014\n\004name\030\006 \002("
    "\t\022\022\n\nshort_desc\030\007 \001(\t\022\021\n\tlong_desc\030\010 \001(\t"
    "\022\020\n\010category\030\t \001(\t\022\017\n\007feature\030\n \003(\t\022/\n\004d"
    "eps\030\013 \001(\0132!.metadata.PluginInfo.Dependen"
    "cies\032\237\001\n\014Dependencies\022\024\n\014after_plugin\030\001 "
    "\003(\t\022\025\n\rbefore_plugin\030\002 \003(\t\022\026\n\016require_pl"
    "ugin\030\003 \003(\t\022\027\n\017require_feature\030\004 \003(\t\022\027\n\017c"
    "onflict_plugin\030\005 \003(\t\022\030\n\020conflict_feature"
    "\030\006 \003(\t\"1\n\013PluginBrief\022\"\n\004info\030\001 \002(\0132\024.me"
    "tadata.PluginInfo\"\306\013\n\006Plugin\022\"\n\004info\030\001 \002"
    "(\0132\024.metadata.PluginInfo\022\'\n\006screen\030\002 \001(\013"
    "2\027.metadata.Plugin.Screen\022-\n\textension\030\003"
    " \003(\0132\032.metadata.Plugin.Extension\032\346\010\n\006Opt"
    "ion\022\014\n\004name\030\001 \002(\t\022*\n\004type\030\002 \002(\0162\034.metada"
    "ta.Plugin.Option.Type\022/\n\tlist_type\030\003 \001(\016"
    "2\034.metadata.Plugin.Option.Type\022\022\n\nshort_"
    "desc\030\004 \001(\t\022\021\n\tlong_desc\030\005 \001(\t\022\024\n\010group_i"
    "d\030\006 \001(\021:\002-1\022\027\n\013subgroup_id\030\007 \001(\021:\002-1\022\021\n\t"
    "read_only\030\010 \001(\010\022\022\n\nextensible\030\t \001(\010\022\026\n\ns"
    "ort_start\030\n \001(\021:\002-1\022;\n\rdefault_value\030\013 \003"
    "(\0132$.metadata.Plugin.Option.GenericValue"
    "\022\017\n\007int_min\030\014 \001(\021\022\017\n\007int_max\030\r \001(\021\0228\n\010in"
    "t_desc\030\016 \003(\0132&.metadata.Plugin.Option.In"
    "tDescription\022\021\n\tfloat_min\030\017 \001(\002\022\021\n\tfloat"
    "_max\030\020 \001(\002\022\021\n\tprecision\030\021 \001(\002\022B\n\017str_res"
    "triction\030\022 \003(\0132).metadata.Plugin.Option."
    "StringRestriction\022\r\n\005hints\030\023 \001(\t\022\024\n\014pass"
    "ive_grab\030\024 \001(\010\022\020\n\010internal\030\025 \001(\010\022\017\n\007node"
    "lay\030\026 \001(\010\032e\n\nColorValue\022\023\n\003red\030\001 \001(\t:\0060x"
    "0000\022\025\n\005green\030\002 \001(\t:\0060x0000\022\024\n\004blue\030\003 \001("
    "\t:\0060x0000\022\025\n\005alpha\030\004 \001(\t:\0060xffff\032\255\001\n\014Gen"
    "ericValue\022\022\n\nbool_value\030\001 \001(\010\022\021\n\tint_val"
    "ue\030\002 \001(\021\022\023\n\013float_value\030\003 \001(\002\0227\n\013color_v"
    "alue\030\004 \001(\0132\".metadata.Plugin.Option.Colo"
    "rValue\022\022\n\nedge_value\030\005 \001(\r\022\024\n\014string_val"
    "ue\030\006 \001(\t\032-\n\016IntDescription\022\r\n\005value\030\001 \002("
    "\021\022\014\n\004name\030\002 \002(\t\0320\n\021StringRestriction\022\r\n\005"
    "value\030\001 \002(\t\022\014\n\004name\030\002 \002(\t\"\205\001\n\004Type\022\010\n\004BO"
    "OL\020\000\022\007\n\003INT\020\001\022\t\n\005FLOAT\020\002\022\n\n\006STRING\020\003\022\t\n\005"
    "COLOR\020\004\022\n\n\006ACTION\020\005\022\007\n\003KEY\020\006\022\n\n\006BUTTON\020\007"
    "\022\010\n\004EDGE\020\010\022\010\n\004BELL\020\t\022\t\n\005MATCH\020\n\022\010\n\004LIST\020"
    "\013\032y\n\tExtension\022\023\n\013base_plugin\030\001 \002(\t\022\023\n\013b"
    "ase_option\030\002 \003(\t\022B\n\017str_restriction\030\003 \003("
    "\0132).metadata.Plugin.Option.StringRestric"
    "tion\032\\\n\006Screen\022\'\n\006option\030\001 \003(\0132\027.metadat"
    "a.Plugin.Option\022\022\n\ngroup_desc\030\002 \003(\t\022\025\n\rs"
    "ubgroup_desc\030\003 \003(\tB\002H\001"
};
static ::absl::once_flag descriptor_table_compizconfig_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_compizconfig_2eproto = {
    false,
    false,
    1982,
    descriptor_table_protodef_compizconfig_2eproto,
    "compizconfig.proto",
    &descriptor_table_compizconfig_2eproto_once,
    nullptr,
    0,
    11,
    schemas,
    file_default_instances,
    TableStruct_compizconfig_2eproto::offsets,
    file_level_enum_descriptors_compizconfig_2eproto,
    file_level_service_descriptors_compizconfig_2eproto,
};
namespace metadata {
const ::google::protobuf::EnumDescriptor* Plugin_Option_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_compizconfig_2eproto);
  return file_level_enum_descriptors_compizconfig_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Plugin_Option_Type_internal_data_[] = {
    786432u, 0u, };
bool Plugin_Option_Type_IsValid(int value) {
  return 0 <= value && value <= 11;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Plugin_Option_Type Plugin_Option::BOOL;
constexpr Plugin_Option_Type Plugin_Option::INT;
constexpr Plugin_Option_Type Plugin_Option::FLOAT;
constexpr Plugin_Option_Type Plugin_Option::STRING;
constexpr Plugin_Option_Type Plugin_Option::COLOR;
constexpr Plugin_Option_Type Plugin_Option::ACTION;
constexpr Plugin_Option_Type Plugin_Option::KEY;
constexpr Plugin_Option_Type Plugin_Option::BUTTON;
constexpr Plugin_Option_Type Plugin_Option::EDGE;
constexpr Plugin_Option_Type Plugin_Option::BELL;
constexpr Plugin_Option_Type Plugin_Option::MATCH;
constexpr Plugin_Option_Type Plugin_Option::LIST;
constexpr Plugin_Option_Type Plugin_Option::Type_MIN;
constexpr Plugin_Option_Type Plugin_Option::Type_MAX;
constexpr int Plugin_Option::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class PluginInfo_Dependencies::_Internal {
 public:
};

PluginInfo_Dependencies::PluginInfo_Dependencies(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metadata.PluginInfo.Dependencies)
}
inline PROTOBUF_NDEBUG_INLINE PluginInfo_Dependencies::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::metadata::PluginInfo_Dependencies& from_msg)
      : after_plugin_{visibility, arena, from.after_plugin_},
        before_plugin_{visibility, arena, from.before_plugin_},
        require_plugin_{visibility, arena, from.require_plugin_},
        require_feature_{visibility, arena, from.require_feature_},
        conflict_plugin_{visibility, arena, from.conflict_plugin_},
        conflict_feature_{visibility, arena, from.conflict_feature_},
        _cached_size_{0} {}

PluginInfo_Dependencies::PluginInfo_Dependencies(
    ::google::protobuf::Arena* arena,
    const PluginInfo_Dependencies& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PluginInfo_Dependencies* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:metadata.PluginInfo.Dependencies)
}
inline PROTOBUF_NDEBUG_INLINE PluginInfo_Dependencies::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : after_plugin_{visibility, arena},
        before_plugin_{visibility, arena},
        require_plugin_{visibility, arena},
        require_feature_{visibility, arena},
        conflict_plugin_{visibility, arena},
        conflict_feature_{visibility, arena},
        _cached_size_{0} {}

inline void PluginInfo_Dependencies::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PluginInfo_Dependencies::~PluginInfo_Dependencies() {
  // @@protoc_insertion_point(destructor:metadata.PluginInfo.Dependencies)
  SharedDtor(*this);
}
inline void PluginInfo_Dependencies::SharedDtor(MessageLite& self) {
  PluginInfo_Dependencies& this_ = static_cast<PluginInfo_Dependencies&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PluginInfo_Dependencies::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PluginInfo_Dependencies(arena);
}
constexpr auto PluginInfo_Dependencies::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.after_plugin_) +
          decltype(PluginInfo_Dependencies::_impl_.after_plugin_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.before_plugin_) +
          decltype(PluginInfo_Dependencies::_impl_.before_plugin_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.require_plugin_) +
          decltype(PluginInfo_Dependencies::_impl_.require_plugin_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.require_feature_) +
          decltype(PluginInfo_Dependencies::_impl_.require_feature_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.conflict_plugin_) +
          decltype(PluginInfo_Dependencies::_impl_.conflict_plugin_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.conflict_feature_) +
          decltype(PluginInfo_Dependencies::_impl_.conflict_feature_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PluginInfo_Dependencies), alignof(PluginInfo_Dependencies), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PluginInfo_Dependencies::PlacementNew_,
                                 sizeof(PluginInfo_Dependencies),
                                 alignof(PluginInfo_Dependencies));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PluginInfo_Dependencies::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PluginInfo_Dependencies_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PluginInfo_Dependencies::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PluginInfo_Dependencies>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PluginInfo_Dependencies::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PluginInfo_Dependencies>(), &PluginInfo_Dependencies::ByteSizeLong,
            &PluginInfo_Dependencies::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_._cached_size_),
        false,
    },
    &PluginInfo_Dependencies::kDescriptorMethods,
    &descriptor_table_compizconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PluginInfo_Dependencies::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 126, 2> PluginInfo_Dependencies::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metadata::PluginInfo_Dependencies>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string after_plugin = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.after_plugin_)}},
    // repeated string before_plugin = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.before_plugin_)}},
    // repeated string require_plugin = 3;
    {::_pbi::TcParser::FastSR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.require_plugin_)}},
    // repeated string require_feature = 4;
    {::_pbi::TcParser::FastSR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.require_feature_)}},
    // repeated string conflict_plugin = 5;
    {::_pbi::TcParser::FastSR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.conflict_plugin_)}},
    // repeated string conflict_feature = 6;
    {::_pbi::TcParser::FastSR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.conflict_feature_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string after_plugin = 1;
    {PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.after_plugin_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string before_plugin = 2;
    {PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.before_plugin_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string require_plugin = 3;
    {PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.require_plugin_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string require_feature = 4;
    {PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.require_feature_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string conflict_plugin = 5;
    {PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.conflict_plugin_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string conflict_feature = 6;
    {PROTOBUF_FIELD_OFFSET(PluginInfo_Dependencies, _impl_.conflict_feature_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\40\14\15\16\17\17\20\0"
    "metadata.PluginInfo.Dependencies"
    "after_plugin"
    "before_plugin"
    "require_plugin"
    "require_feature"
    "conflict_plugin"
    "conflict_feature"
  }},
};

PROTOBUF_NOINLINE void PluginInfo_Dependencies::Clear() {
// @@protoc_insertion_point(message_clear_start:metadata.PluginInfo.Dependencies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.after_plugin_.Clear();
  _impl_.before_plugin_.Clear();
  _impl_.require_plugin_.Clear();
  _impl_.require_feature_.Clear();
  _impl_.conflict_plugin_.Clear();
  _impl_.conflict_feature_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PluginInfo_Dependencies::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PluginInfo_Dependencies& this_ = static_cast<const PluginInfo_Dependencies&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PluginInfo_Dependencies::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PluginInfo_Dependencies& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:metadata.PluginInfo.Dependencies)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string after_plugin = 1;
          for (int i = 0, n = this_._internal_after_plugin_size(); i < n; ++i) {
            const auto& s = this_._internal_after_plugin().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.PluginInfo.Dependencies.after_plugin");
            target = stream->WriteString(1, s, target);
          }

          // repeated string before_plugin = 2;
          for (int i = 0, n = this_._internal_before_plugin_size(); i < n; ++i) {
            const auto& s = this_._internal_before_plugin().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.PluginInfo.Dependencies.before_plugin");
            target = stream->WriteString(2, s, target);
          }

          // repeated string require_plugin = 3;
          for (int i = 0, n = this_._internal_require_plugin_size(); i < n; ++i) {
            const auto& s = this_._internal_require_plugin().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.PluginInfo.Dependencies.require_plugin");
            target = stream->WriteString(3, s, target);
          }

          // repeated string require_feature = 4;
          for (int i = 0, n = this_._internal_require_feature_size(); i < n; ++i) {
            const auto& s = this_._internal_require_feature().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.PluginInfo.Dependencies.require_feature");
            target = stream->WriteString(4, s, target);
          }

          // repeated string conflict_plugin = 5;
          for (int i = 0, n = this_._internal_conflict_plugin_size(); i < n; ++i) {
            const auto& s = this_._internal_conflict_plugin().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.PluginInfo.Dependencies.conflict_plugin");
            target = stream->WriteString(5, s, target);
          }

          // repeated string conflict_feature = 6;
          for (int i = 0, n = this_._internal_conflict_feature_size(); i < n; ++i) {
            const auto& s = this_._internal_conflict_feature().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.PluginInfo.Dependencies.conflict_feature");
            target = stream->WriteString(6, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:metadata.PluginInfo.Dependencies)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PluginInfo_Dependencies::ByteSizeLong(const MessageLite& base) {
          const PluginInfo_Dependencies& this_ = static_cast<const PluginInfo_Dependencies&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PluginInfo_Dependencies::ByteSizeLong() const {
          const PluginInfo_Dependencies& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:metadata.PluginInfo.Dependencies)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string after_plugin = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_after_plugin().size());
              for (int i = 0, n = this_._internal_after_plugin().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_after_plugin().Get(i));
              }
            }
            // repeated string before_plugin = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_before_plugin().size());
              for (int i = 0, n = this_._internal_before_plugin().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_before_plugin().Get(i));
              }
            }
            // repeated string require_plugin = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_require_plugin().size());
              for (int i = 0, n = this_._internal_require_plugin().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_require_plugin().Get(i));
              }
            }
            // repeated string require_feature = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_require_feature().size());
              for (int i = 0, n = this_._internal_require_feature().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_require_feature().Get(i));
              }
            }
            // repeated string conflict_plugin = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_conflict_plugin().size());
              for (int i = 0, n = this_._internal_conflict_plugin().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_conflict_plugin().Get(i));
              }
            }
            // repeated string conflict_feature = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_conflict_feature().size());
              for (int i = 0, n = this_._internal_conflict_feature().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_conflict_feature().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PluginInfo_Dependencies::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PluginInfo_Dependencies*>(&to_msg);
  auto& from = static_cast<const PluginInfo_Dependencies&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:metadata.PluginInfo.Dependencies)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_after_plugin()->MergeFrom(from._internal_after_plugin());
  _this->_internal_mutable_before_plugin()->MergeFrom(from._internal_before_plugin());
  _this->_internal_mutable_require_plugin()->MergeFrom(from._internal_require_plugin());
  _this->_internal_mutable_require_feature()->MergeFrom(from._internal_require_feature());
  _this->_internal_mutable_conflict_plugin()->MergeFrom(from._internal_conflict_plugin());
  _this->_internal_mutable_conflict_feature()->MergeFrom(from._internal_conflict_feature());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PluginInfo_Dependencies::CopyFrom(const PluginInfo_Dependencies& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metadata.PluginInfo.Dependencies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PluginInfo_Dependencies::InternalSwap(PluginInfo_Dependencies* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.after_plugin_.InternalSwap(&other->_impl_.after_plugin_);
  _impl_.before_plugin_.InternalSwap(&other->_impl_.before_plugin_);
  _impl_.require_plugin_.InternalSwap(&other->_impl_.require_plugin_);
  _impl_.require_feature_.InternalSwap(&other->_impl_.require_feature_);
  _impl_.conflict_plugin_.InternalSwap(&other->_impl_.conflict_plugin_);
  _impl_.conflict_feature_.InternalSwap(&other->_impl_.conflict_feature_);
}

::google::protobuf::Metadata PluginInfo_Dependencies::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PluginInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PluginInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000003c3) ^ 0x000003c3) != 0;
  }
};

PluginInfo::PluginInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metadata.PluginInfo)
}
inline PROTOBUF_NDEBUG_INLINE PluginInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::metadata::PluginInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        feature_{visibility, arena, from.feature_},
        locale_(arena, from.locale_),
        name_(arena, from.name_),
        short_desc_(arena, from.short_desc_),
        long_desc_(arena, from.long_desc_),
        category_(arena, from.category_) {}

PluginInfo::PluginInfo(
    ::google::protobuf::Arena* arena,
    const PluginInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PluginInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.deps_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::metadata::PluginInfo_Dependencies>(
                              arena, *from._impl_.deps_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, time_),
           offsetof(Impl_, basic_metadata_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::basic_metadata_));

  // @@protoc_insertion_point(copy_constructor:metadata.PluginInfo)
}
inline PROTOBUF_NDEBUG_INLINE PluginInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        feature_{visibility, arena},
        locale_(arena),
        name_(arena),
        short_desc_(arena),
        long_desc_(arena),
        category_(arena) {}

inline void PluginInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, deps_),
           0,
           offsetof(Impl_, basic_metadata_) -
               offsetof(Impl_, deps_) +
               sizeof(Impl_::basic_metadata_));
}
PluginInfo::~PluginInfo() {
  // @@protoc_insertion_point(destructor:metadata.PluginInfo)
  SharedDtor(*this);
}
inline void PluginInfo::SharedDtor(MessageLite& self) {
  PluginInfo& this_ = static_cast<PluginInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.locale_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.short_desc_.Destroy();
  this_._impl_.long_desc_.Destroy();
  this_._impl_.category_.Destroy();
  delete this_._impl_.deps_;
  this_._impl_.~Impl_();
}

inline void* PluginInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PluginInfo(arena);
}
constexpr auto PluginInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.feature_) +
          decltype(PluginInfo::_impl_.feature_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PluginInfo), alignof(PluginInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PluginInfo::PlacementNew_,
                                 sizeof(PluginInfo),
                                 alignof(PluginInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PluginInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PluginInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        PluginInfo::IsInitializedImpl,
        &PluginInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PluginInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PluginInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PluginInfo>(), &PluginInfo::ByteSizeLong,
            &PluginInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_._cached_size_),
        false,
    },
    &PluginInfo::kDescriptorMethods,
    &descriptor_table_compizconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PluginInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 80, 2> PluginInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metadata::PluginInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required sint32 pb_abi_version = 1;
    {::_pbi::TcParser::FastZ32S1,
     {8, 7, 0, PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.pb_abi_version_)}},
    // required string locale = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.locale_)}},
    // required uint64 time = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PluginInfo, _impl_.time_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.time_)}},
    // required bool brief_metadata = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PluginInfo, _impl_.brief_metadata_), 8>(),
     {32, 8, 0, PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.brief_metadata_)}},
    // required bool basic_metadata = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PluginInfo, _impl_.basic_metadata_), 9>(),
     {40, 9, 0, PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.basic_metadata_)}},
    // required string name = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.name_)}},
    // optional string short_desc = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.short_desc_)}},
    // optional string long_desc = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.long_desc_)}},
    // optional string category = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 4, 0, PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.category_)}},
    // repeated string feature = 10;
    {::_pbi::TcParser::FastSR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.feature_)}},
    // optional .metadata.PluginInfo.Dependencies deps = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 5, 0, PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.deps_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required sint32 pb_abi_version = 1;
    {PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.pb_abi_version_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // required string locale = 2;
    {PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.locale_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required uint64 time = 3;
    {PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.time_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // required bool brief_metadata = 4;
    {PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.brief_metadata_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool basic_metadata = 5;
    {PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.basic_metadata_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required string name = 6;
    {PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string short_desc = 7;
    {PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.short_desc_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string long_desc = 8;
    {PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.long_desc_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string category = 9;
    {PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.category_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string feature = 10;
    {PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.feature_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional .metadata.PluginInfo.Dependencies deps = 11;
    {PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.deps_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::metadata::PluginInfo_Dependencies>()},
  }}, {{
    "\23\0\6\0\0\0\4\12\11\10\7\0\0\0\0\0"
    "metadata.PluginInfo"
    "locale"
    "name"
    "short_desc"
    "long_desc"
    "category"
    "feature"
  }},
};

PROTOBUF_NOINLINE void PluginInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:metadata.PluginInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.feature_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.locale_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.short_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.long_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.category_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.deps_ != nullptr);
      _impl_.deps_->Clear();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&_impl_.time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.pb_abi_version_) -
        reinterpret_cast<char*>(&_impl_.time_)) + sizeof(_impl_.pb_abi_version_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&_impl_.brief_metadata_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.basic_metadata_) -
        reinterpret_cast<char*>(&_impl_.brief_metadata_)) + sizeof(_impl_.basic_metadata_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PluginInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PluginInfo& this_ = static_cast<const PluginInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PluginInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PluginInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:metadata.PluginInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required sint32 pb_abi_version = 1;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                1, this_._internal_pb_abi_version(), target);
          }

          // required string locale = 2;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_locale();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.PluginInfo.locale");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // required uint64 time = 3;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_time(), target);
          }

          // required bool brief_metadata = 4;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_brief_metadata(), target);
          }

          // required bool basic_metadata = 5;
          if (cached_has_bits & 0x00000200u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_basic_metadata(), target);
          }

          // required string name = 6;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.PluginInfo.name");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // optional string short_desc = 7;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_short_desc();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.PluginInfo.short_desc");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // optional string long_desc = 8;
          if (cached_has_bits & 0x00000008u) {
            const std::string& _s = this_._internal_long_desc();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.PluginInfo.long_desc");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // optional string category = 9;
          if (cached_has_bits & 0x00000010u) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.PluginInfo.category");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // repeated string feature = 10;
          for (int i = 0, n = this_._internal_feature_size(); i < n; ++i) {
            const auto& s = this_._internal_feature().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.PluginInfo.feature");
            target = stream->WriteString(10, s, target);
          }

          // optional .metadata.PluginInfo.Dependencies deps = 11;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.deps_, this_._impl_.deps_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:metadata.PluginInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PluginInfo::ByteSizeLong(const MessageLite& base) {
          const PluginInfo& this_ = static_cast<const PluginInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PluginInfo::ByteSizeLong() const {
          const PluginInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:metadata.PluginInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string feature = 10;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_feature().size());
              for (int i = 0, n = this_._internal_feature().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_feature().Get(i));
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // required string locale = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_locale());
            }
            // required string name = 6;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          if (cached_has_bits & 0x0000003cu) {
            // optional string short_desc = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_short_desc());
            }
            // optional string long_desc = 8;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_long_desc());
            }
            // optional string category = 9;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // optional .metadata.PluginInfo.Dependencies deps = 11;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.deps_);
            }
          }
          if (cached_has_bits & 0x000000c0u) {
            // required uint64 time = 3;
            if (cached_has_bits & 0x00000040u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_time());
            }
            // required sint32 pb_abi_version = 1;
            if (cached_has_bits & 0x00000080u) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_pb_abi_version());
            }
          }
          if (cached_has_bits & 0x00000300u) {
            // required bool brief_metadata = 4;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2;
            }
            // required bool basic_metadata = 5;
            if (cached_has_bits & 0x00000200u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PluginInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PluginInfo*>(&to_msg);
  auto& from = static_cast<const PluginInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:metadata.PluginInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_feature()->MergeFrom(from._internal_feature());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_locale(from._internal_locale());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_short_desc(from._internal_short_desc());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_long_desc(from._internal_long_desc());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_category(from._internal_category());
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.deps_ != nullptr);
      if (_this->_impl_.deps_ == nullptr) {
        _this->_impl_.deps_ =
            ::google::protobuf::Message::CopyConstruct<::metadata::PluginInfo_Dependencies>(arena, *from._impl_.deps_);
      } else {
        _this->_impl_.deps_->MergeFrom(*from._impl_.deps_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.time_ = from._impl_.time_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.pb_abi_version_ = from._impl_.pb_abi_version_;
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.brief_metadata_ = from._impl_.brief_metadata_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.basic_metadata_ = from._impl_.basic_metadata_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PluginInfo::CopyFrom(const PluginInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metadata.PluginInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PluginInfo::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PluginInfo&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PluginInfo::InternalSwap(PluginInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.feature_.InternalSwap(&other->_impl_.feature_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.locale_, &other->_impl_.locale_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.short_desc_, &other->_impl_.short_desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.long_desc_, &other->_impl_.long_desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.basic_metadata_)
      + sizeof(PluginInfo::_impl_.basic_metadata_)
      - PROTOBUF_FIELD_OFFSET(PluginInfo, _impl_.deps_)>(
          reinterpret_cast<char*>(&_impl_.deps_),
          reinterpret_cast<char*>(&other->_impl_.deps_));
}

::google::protobuf::Metadata PluginInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PluginBrief::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PluginBrief>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PluginBrief, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

PluginBrief::PluginBrief(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metadata.PluginBrief)
}
inline PROTOBUF_NDEBUG_INLINE PluginBrief::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::metadata::PluginBrief& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PluginBrief::PluginBrief(
    ::google::protobuf::Arena* arena,
    const PluginBrief& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PluginBrief* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::metadata::PluginInfo>(
                              arena, *from._impl_.info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:metadata.PluginBrief)
}
inline PROTOBUF_NDEBUG_INLINE PluginBrief::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PluginBrief::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.info_ = {};
}
PluginBrief::~PluginBrief() {
  // @@protoc_insertion_point(destructor:metadata.PluginBrief)
  SharedDtor(*this);
}
inline void PluginBrief::SharedDtor(MessageLite& self) {
  PluginBrief& this_ = static_cast<PluginBrief&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.info_;
  this_._impl_.~Impl_();
}

inline void* PluginBrief::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PluginBrief(arena);
}
constexpr auto PluginBrief::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PluginBrief),
                                            alignof(PluginBrief));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PluginBrief::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PluginBrief_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        PluginBrief::IsInitializedImpl,
        &PluginBrief::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PluginBrief>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PluginBrief::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PluginBrief>(), &PluginBrief::ByteSizeLong,
            &PluginBrief::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PluginBrief, _impl_._cached_size_),
        false,
    },
    &PluginBrief::kDescriptorMethods,
    &descriptor_table_compizconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PluginBrief::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PluginBrief::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PluginBrief, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metadata::PluginBrief>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required .metadata.PluginInfo info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PluginBrief, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .metadata.PluginInfo info = 1;
    {PROTOBUF_FIELD_OFFSET(PluginBrief, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::metadata::PluginInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PluginBrief::Clear() {
// @@protoc_insertion_point(message_clear_start:metadata.PluginBrief)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PluginBrief::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PluginBrief& this_ = static_cast<const PluginBrief&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PluginBrief::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PluginBrief& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:metadata.PluginBrief)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .metadata.PluginInfo info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.info_, this_._impl_.info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:metadata.PluginBrief)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PluginBrief::ByteSizeLong(const MessageLite& base) {
          const PluginBrief& this_ = static_cast<const PluginBrief&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PluginBrief::ByteSizeLong() const {
          const PluginBrief& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:metadata.PluginBrief)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // required .metadata.PluginInfo info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PluginBrief::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PluginBrief*>(&to_msg);
  auto& from = static_cast<const PluginBrief&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:metadata.PluginBrief)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.info_ != nullptr);
    if (_this->_impl_.info_ == nullptr) {
      _this->_impl_.info_ =
          ::google::protobuf::Message::CopyConstruct<::metadata::PluginInfo>(arena, *from._impl_.info_);
    } else {
      _this->_impl_.info_->MergeFrom(*from._impl_.info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PluginBrief::CopyFrom(const PluginBrief& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metadata.PluginBrief)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PluginBrief::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PluginBrief&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.info_->IsInitialized()) return false;
  }
  return true;
}

void PluginBrief::InternalSwap(PluginBrief* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_, other->_impl_.info_);
}

::google::protobuf::Metadata PluginBrief::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Plugin_Option_ColorValue::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Plugin_Option_ColorValue>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Plugin_Option_ColorValue, _impl_._has_bits_);
};

/*static*/ const ::_pbi::LazyString Plugin_Option_ColorValue::Impl_::_i_give_permission_to_break_this_code_default_red_{
    {{"0x0000", 6}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString Plugin_Option_ColorValue::Impl_::_i_give_permission_to_break_this_code_default_green_{
    {{"0x0000", 6}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString Plugin_Option_ColorValue::Impl_::_i_give_permission_to_break_this_code_default_blue_{
    {{"0x0000", 6}},
    {nullptr},
};
/*static*/ const ::_pbi::LazyString Plugin_Option_ColorValue::Impl_::_i_give_permission_to_break_this_code_default_alpha_{
    {{"0xffff", 6}},
    {nullptr},
};
Plugin_Option_ColorValue::Plugin_Option_ColorValue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metadata.Plugin.Option.ColorValue)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Option_ColorValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::metadata::Plugin_Option_ColorValue& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        red_(arena, from.red_, _i_give_permission_to_break_this_code_default_red_),
        green_(arena, from.green_, _i_give_permission_to_break_this_code_default_green_),
        blue_(arena, from.blue_, _i_give_permission_to_break_this_code_default_blue_),
        alpha_(arena, from.alpha_, _i_give_permission_to_break_this_code_default_alpha_) {}

Plugin_Option_ColorValue::Plugin_Option_ColorValue(
    ::google::protobuf::Arena* arena,
    const Plugin_Option_ColorValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Plugin_Option_ColorValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:metadata.Plugin.Option.ColorValue)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Option_ColorValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        red_(arena, Impl_::_i_give_permission_to_break_this_code_default_red_),
        green_(arena, Impl_::_i_give_permission_to_break_this_code_default_green_),
        blue_(arena, Impl_::_i_give_permission_to_break_this_code_default_blue_),
        alpha_(arena, Impl_::_i_give_permission_to_break_this_code_default_alpha_) {}

inline void Plugin_Option_ColorValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Plugin_Option_ColorValue::~Plugin_Option_ColorValue() {
  // @@protoc_insertion_point(destructor:metadata.Plugin.Option.ColorValue)
  SharedDtor(*this);
}
inline void Plugin_Option_ColorValue::SharedDtor(MessageLite& self) {
  Plugin_Option_ColorValue& this_ = static_cast<Plugin_Option_ColorValue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.red_.Destroy();
  this_._impl_.green_.Destroy();
  this_._impl_.blue_.Destroy();
  this_._impl_.alpha_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Plugin_Option_ColorValue::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Plugin_Option_ColorValue(arena);
}
constexpr auto Plugin_Option_ColorValue::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Plugin_Option_ColorValue),
                                            alignof(Plugin_Option_ColorValue));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Plugin_Option_ColorValue::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Plugin_Option_ColorValue_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Plugin_Option_ColorValue::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Plugin_Option_ColorValue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Plugin_Option_ColorValue::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Plugin_Option_ColorValue>(), &Plugin_Option_ColorValue::ByteSizeLong,
            &Plugin_Option_ColorValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Plugin_Option_ColorValue, _impl_._cached_size_),
        false,
    },
    &Plugin_Option_ColorValue::kDescriptorMethods,
    &descriptor_table_compizconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Plugin_Option_ColorValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 59, 2> Plugin_Option_ColorValue::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Plugin_Option_ColorValue, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metadata::Plugin_Option_ColorValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string alpha = 4 [default = "0xffff"];
    {::_pbi::TcParser::FastSS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_ColorValue, _impl_.alpha_)}},
    // optional string red = 1 [default = "0x0000"];
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_ColorValue, _impl_.red_)}},
    // optional string green = 2 [default = "0x0000"];
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_ColorValue, _impl_.green_)}},
    // optional string blue = 3 [default = "0x0000"];
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_ColorValue, _impl_.blue_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string red = 1 [default = "0x0000"];
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_ColorValue, _impl_.red_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string green = 2 [default = "0x0000"];
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_ColorValue, _impl_.green_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string blue = 3 [default = "0x0000"];
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_ColorValue, _impl_.blue_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string alpha = 4 [default = "0xffff"];
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_ColorValue, _impl_.alpha_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\3\5\4\5\0\0\0"
    "metadata.Plugin.Option.ColorValue"
    "red"
    "green"
    "blue"
    "alpha"
  }},
};

PROTOBUF_NOINLINE void Plugin_Option_ColorValue::Clear() {
// @@protoc_insertion_point(message_clear_start:metadata.Plugin.Option.ColorValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.red_.ClearToDefault(::metadata::Plugin_Option_ColorValue::Impl_::_i_give_permission_to_break_this_code_default_red_, GetArena());
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.green_.ClearToDefault(::metadata::Plugin_Option_ColorValue::Impl_::_i_give_permission_to_break_this_code_default_green_, GetArena());
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.blue_.ClearToDefault(::metadata::Plugin_Option_ColorValue::Impl_::_i_give_permission_to_break_this_code_default_blue_, GetArena());
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.alpha_.ClearToDefault(::metadata::Plugin_Option_ColorValue::Impl_::_i_give_permission_to_break_this_code_default_alpha_, GetArena());
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Plugin_Option_ColorValue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Plugin_Option_ColorValue& this_ = static_cast<const Plugin_Option_ColorValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Plugin_Option_ColorValue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Plugin_Option_ColorValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:metadata.Plugin.Option.ColorValue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string red = 1 [default = "0x0000"];
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_red();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Option.ColorValue.red");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional string green = 2 [default = "0x0000"];
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_green();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Option.ColorValue.green");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // optional string blue = 3 [default = "0x0000"];
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_blue();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Option.ColorValue.blue");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // optional string alpha = 4 [default = "0xffff"];
          if (cached_has_bits & 0x00000008u) {
            const std::string& _s = this_._internal_alpha();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Option.ColorValue.alpha");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:metadata.Plugin.Option.ColorValue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Plugin_Option_ColorValue::ByteSizeLong(const MessageLite& base) {
          const Plugin_Option_ColorValue& this_ = static_cast<const Plugin_Option_ColorValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Plugin_Option_ColorValue::ByteSizeLong() const {
          const Plugin_Option_ColorValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:metadata.Plugin.Option.ColorValue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // optional string red = 1 [default = "0x0000"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_red());
            }
            // optional string green = 2 [default = "0x0000"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_green());
            }
            // optional string blue = 3 [default = "0x0000"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_blue());
            }
            // optional string alpha = 4 [default = "0xffff"];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_alpha());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Plugin_Option_ColorValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Plugin_Option_ColorValue*>(&to_msg);
  auto& from = static_cast<const Plugin_Option_ColorValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:metadata.Plugin.Option.ColorValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_red(from._internal_red());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_green(from._internal_green());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_blue(from._internal_blue());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_alpha(from._internal_alpha());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Plugin_Option_ColorValue::CopyFrom(const Plugin_Option_ColorValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metadata.Plugin.Option.ColorValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Plugin_Option_ColorValue::InternalSwap(Plugin_Option_ColorValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.red_, &other->_impl_.red_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.green_, &other->_impl_.green_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.blue_, &other->_impl_.blue_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alpha_, &other->_impl_.alpha_, arena);
}

::google::protobuf::Metadata Plugin_Option_ColorValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Plugin_Option_GenericValue::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Plugin_Option_GenericValue>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_._has_bits_);
};

Plugin_Option_GenericValue::Plugin_Option_GenericValue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metadata.Plugin.Option.GenericValue)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Option_GenericValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::metadata::Plugin_Option_GenericValue& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        string_value_(arena, from.string_value_) {}

Plugin_Option_GenericValue::Plugin_Option_GenericValue(
    ::google::protobuf::Arena* arena,
    const Plugin_Option_GenericValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Plugin_Option_GenericValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.color_value_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::metadata::Plugin_Option_ColorValue>(
                              arena, *from._impl_.color_value_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bool_value_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, bool_value_),
           offsetof(Impl_, edge_value_) -
               offsetof(Impl_, bool_value_) +
               sizeof(Impl_::edge_value_));

  // @@protoc_insertion_point(copy_constructor:metadata.Plugin.Option.GenericValue)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Option_GenericValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        string_value_(arena) {}

inline void Plugin_Option_GenericValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, color_value_),
           0,
           offsetof(Impl_, edge_value_) -
               offsetof(Impl_, color_value_) +
               sizeof(Impl_::edge_value_));
}
Plugin_Option_GenericValue::~Plugin_Option_GenericValue() {
  // @@protoc_insertion_point(destructor:metadata.Plugin.Option.GenericValue)
  SharedDtor(*this);
}
inline void Plugin_Option_GenericValue::SharedDtor(MessageLite& self) {
  Plugin_Option_GenericValue& this_ = static_cast<Plugin_Option_GenericValue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.string_value_.Destroy();
  delete this_._impl_.color_value_;
  this_._impl_.~Impl_();
}

inline void* Plugin_Option_GenericValue::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Plugin_Option_GenericValue(arena);
}
constexpr auto Plugin_Option_GenericValue::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Plugin_Option_GenericValue),
                                            alignof(Plugin_Option_GenericValue));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Plugin_Option_GenericValue::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Plugin_Option_GenericValue_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Plugin_Option_GenericValue::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Plugin_Option_GenericValue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Plugin_Option_GenericValue::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Plugin_Option_GenericValue>(), &Plugin_Option_GenericValue::ByteSizeLong,
            &Plugin_Option_GenericValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_._cached_size_),
        false,
    },
    &Plugin_Option_GenericValue::kDescriptorMethods,
    &descriptor_table_compizconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Plugin_Option_GenericValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 56, 2> Plugin_Option_GenericValue::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metadata::Plugin_Option_GenericValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool bool_value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Plugin_Option_GenericValue, _impl_.bool_value_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.bool_value_)}},
    // optional sint32 int_value = 2;
    {::_pbi::TcParser::FastZ32S1,
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.int_value_)}},
    // optional float float_value = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 4, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.float_value_)}},
    // optional .metadata.Plugin.Option.ColorValue color_value = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.color_value_)}},
    // optional uint32 edge_value = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Plugin_Option_GenericValue, _impl_.edge_value_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.edge_value_)}},
    // optional string string_value = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.string_value_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool bool_value = 1;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.bool_value_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional sint32 int_value = 2;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.int_value_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional float float_value = 3;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.float_value_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .metadata.Plugin.Option.ColorValue color_value = 4;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.color_value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 edge_value = 5;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.edge_value_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string string_value = 6;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.string_value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::metadata::Plugin_Option_ColorValue>()},
  }}, {{
    "\43\0\0\0\0\0\14\0"
    "metadata.Plugin.Option.GenericValue"
    "string_value"
  }},
};

PROTOBUF_NOINLINE void Plugin_Option_GenericValue::Clear() {
// @@protoc_insertion_point(message_clear_start:metadata.Plugin.Option.GenericValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.string_value_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.color_value_ != nullptr);
      _impl_.color_value_->Clear();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&_impl_.bool_value_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.edge_value_) -
        reinterpret_cast<char*>(&_impl_.bool_value_)) + sizeof(_impl_.edge_value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Plugin_Option_GenericValue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Plugin_Option_GenericValue& this_ = static_cast<const Plugin_Option_GenericValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Plugin_Option_GenericValue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Plugin_Option_GenericValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:metadata.Plugin.Option.GenericValue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional bool bool_value = 1;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_bool_value(), target);
          }

          // optional sint32 int_value = 2;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                2, this_._internal_int_value(), target);
          }

          // optional float float_value = 3;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_float_value(), target);
          }

          // optional .metadata.Plugin.Option.ColorValue color_value = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.color_value_, this_._impl_.color_value_->GetCachedSize(), target,
                stream);
          }

          // optional uint32 edge_value = 5;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_edge_value(), target);
          }

          // optional string string_value = 6;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_string_value();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Option.GenericValue.string_value");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:metadata.Plugin.Option.GenericValue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Plugin_Option_GenericValue::ByteSizeLong(const MessageLite& base) {
          const Plugin_Option_GenericValue& this_ = static_cast<const Plugin_Option_GenericValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Plugin_Option_GenericValue::ByteSizeLong() const {
          const Plugin_Option_GenericValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:metadata.Plugin.Option.GenericValue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // optional string string_value = 6;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_string_value());
            }
            // optional .metadata.Plugin.Option.ColorValue color_value = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.color_value_);
            }
            // optional bool bool_value = 1;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2;
            }
            // optional sint32 int_value = 2;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_int_value());
            }
            // optional float float_value = 3;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
            // optional uint32 edge_value = 5;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_edge_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Plugin_Option_GenericValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Plugin_Option_GenericValue*>(&to_msg);
  auto& from = static_cast<const Plugin_Option_GenericValue&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:metadata.Plugin.Option.GenericValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_string_value(from._internal_string_value());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.color_value_ != nullptr);
      if (_this->_impl_.color_value_ == nullptr) {
        _this->_impl_.color_value_ =
            ::google::protobuf::Message::CopyConstruct<::metadata::Plugin_Option_ColorValue>(arena, *from._impl_.color_value_);
      } else {
        _this->_impl_.color_value_->MergeFrom(*from._impl_.color_value_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.bool_value_ = from._impl_.bool_value_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.int_value_ = from._impl_.int_value_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.float_value_ = from._impl_.float_value_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.edge_value_ = from._impl_.edge_value_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Plugin_Option_GenericValue::CopyFrom(const Plugin_Option_GenericValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metadata.Plugin.Option.GenericValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Plugin_Option_GenericValue::InternalSwap(Plugin_Option_GenericValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.string_value_, &other->_impl_.string_value_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.edge_value_)
      + sizeof(Plugin_Option_GenericValue::_impl_.edge_value_)
      - PROTOBUF_FIELD_OFFSET(Plugin_Option_GenericValue, _impl_.color_value_)>(
          reinterpret_cast<char*>(&_impl_.color_value_),
          reinterpret_cast<char*>(&other->_impl_.color_value_));
}

::google::protobuf::Metadata Plugin_Option_GenericValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Plugin_Option_IntDescription::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Plugin_Option_IntDescription>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Plugin_Option_IntDescription, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

Plugin_Option_IntDescription::Plugin_Option_IntDescription(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metadata.Plugin.Option.IntDescription)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Option_IntDescription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::metadata::Plugin_Option_IntDescription& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

Plugin_Option_IntDescription::Plugin_Option_IntDescription(
    ::google::protobuf::Arena* arena,
    const Plugin_Option_IntDescription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Plugin_Option_IntDescription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.value_ = from._impl_.value_;

  // @@protoc_insertion_point(copy_constructor:metadata.Plugin.Option.IntDescription)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Option_IntDescription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void Plugin_Option_IntDescription::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
Plugin_Option_IntDescription::~Plugin_Option_IntDescription() {
  // @@protoc_insertion_point(destructor:metadata.Plugin.Option.IntDescription)
  SharedDtor(*this);
}
inline void Plugin_Option_IntDescription::SharedDtor(MessageLite& self) {
  Plugin_Option_IntDescription& this_ = static_cast<Plugin_Option_IntDescription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Plugin_Option_IntDescription::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Plugin_Option_IntDescription(arena);
}
constexpr auto Plugin_Option_IntDescription::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Plugin_Option_IntDescription),
                                            alignof(Plugin_Option_IntDescription));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Plugin_Option_IntDescription::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Plugin_Option_IntDescription_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        Plugin_Option_IntDescription::IsInitializedImpl,
        &Plugin_Option_IntDescription::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Plugin_Option_IntDescription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Plugin_Option_IntDescription::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Plugin_Option_IntDescription>(), &Plugin_Option_IntDescription::ByteSizeLong,
            &Plugin_Option_IntDescription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Plugin_Option_IntDescription, _impl_._cached_size_),
        false,
    },
    &Plugin_Option_IntDescription::kDescriptorMethods,
    &descriptor_table_compizconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Plugin_Option_IntDescription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2> Plugin_Option_IntDescription::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Plugin_Option_IntDescription, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metadata::Plugin_Option_IntDescription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required string name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_IntDescription, _impl_.name_)}},
    // required sint32 value = 1;
    {::_pbi::TcParser::FastZ32S1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_IntDescription, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required sint32 value = 1;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_IntDescription, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // required string name = 2;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_IntDescription, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\0\4\0\0\0\0\0"
    "metadata.Plugin.Option.IntDescription"
    "name"
  }},
};

PROTOBUF_NOINLINE void Plugin_Option_IntDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:metadata.Plugin.Option.IntDescription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.value_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Plugin_Option_IntDescription::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Plugin_Option_IntDescription& this_ = static_cast<const Plugin_Option_IntDescription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Plugin_Option_IntDescription::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Plugin_Option_IntDescription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:metadata.Plugin.Option.IntDescription)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required sint32 value = 1;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                1, this_._internal_value(), target);
          }

          // required string name = 2;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Option.IntDescription.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:metadata.Plugin.Option.IntDescription)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Plugin_Option_IntDescription::ByteSizeLong(const MessageLite& base) {
          const Plugin_Option_IntDescription& this_ = static_cast<const Plugin_Option_IntDescription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Plugin_Option_IntDescription::ByteSizeLong() const {
          const Plugin_Option_IntDescription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:metadata.Plugin.Option.IntDescription)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // required string name = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // required sint32 value = 1;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Plugin_Option_IntDescription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Plugin_Option_IntDescription*>(&to_msg);
  auto& from = static_cast<const Plugin_Option_IntDescription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:metadata.Plugin.Option.IntDescription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Plugin_Option_IntDescription::CopyFrom(const Plugin_Option_IntDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metadata.Plugin.Option.IntDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Plugin_Option_IntDescription::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const Plugin_Option_IntDescription&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Plugin_Option_IntDescription::InternalSwap(Plugin_Option_IntDescription* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata Plugin_Option_IntDescription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Plugin_Option_StringRestriction::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Plugin_Option_StringRestriction>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Plugin_Option_StringRestriction, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

Plugin_Option_StringRestriction::Plugin_Option_StringRestriction(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metadata.Plugin.Option.StringRestriction)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Option_StringRestriction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::metadata::Plugin_Option_StringRestriction& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        value_(arena, from.value_),
        name_(arena, from.name_) {}

Plugin_Option_StringRestriction::Plugin_Option_StringRestriction(
    ::google::protobuf::Arena* arena,
    const Plugin_Option_StringRestriction& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Plugin_Option_StringRestriction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:metadata.Plugin.Option.StringRestriction)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Option_StringRestriction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        value_(arena),
        name_(arena) {}

inline void Plugin_Option_StringRestriction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Plugin_Option_StringRestriction::~Plugin_Option_StringRestriction() {
  // @@protoc_insertion_point(destructor:metadata.Plugin.Option.StringRestriction)
  SharedDtor(*this);
}
inline void Plugin_Option_StringRestriction::SharedDtor(MessageLite& self) {
  Plugin_Option_StringRestriction& this_ = static_cast<Plugin_Option_StringRestriction&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.value_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Plugin_Option_StringRestriction::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Plugin_Option_StringRestriction(arena);
}
constexpr auto Plugin_Option_StringRestriction::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Plugin_Option_StringRestriction),
                                            alignof(Plugin_Option_StringRestriction));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Plugin_Option_StringRestriction::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Plugin_Option_StringRestriction_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        Plugin_Option_StringRestriction::IsInitializedImpl,
        &Plugin_Option_StringRestriction::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Plugin_Option_StringRestriction>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Plugin_Option_StringRestriction::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Plugin_Option_StringRestriction>(), &Plugin_Option_StringRestriction::ByteSizeLong,
            &Plugin_Option_StringRestriction::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Plugin_Option_StringRestriction, _impl_._cached_size_),
        false,
    },
    &Plugin_Option_StringRestriction::kDescriptorMethods,
    &descriptor_table_compizconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Plugin_Option_StringRestriction::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> Plugin_Option_StringRestriction::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Plugin_Option_StringRestriction, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metadata::Plugin_Option_StringRestriction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required string name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_StringRestriction, _impl_.name_)}},
    // required string value = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option_StringRestriction, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string value = 1;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_StringRestriction, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string name = 2;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option_StringRestriction, _impl_.name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\5\4\0\0\0\0\0"
    "metadata.Plugin.Option.StringRestriction"
    "value"
    "name"
  }},
};

PROTOBUF_NOINLINE void Plugin_Option_StringRestriction::Clear() {
// @@protoc_insertion_point(message_clear_start:metadata.Plugin.Option.StringRestriction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Plugin_Option_StringRestriction::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Plugin_Option_StringRestriction& this_ = static_cast<const Plugin_Option_StringRestriction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Plugin_Option_StringRestriction::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Plugin_Option_StringRestriction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:metadata.Plugin.Option.StringRestriction)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required string value = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Option.StringRestriction.value");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // required string name = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Option.StringRestriction.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:metadata.Plugin.Option.StringRestriction)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Plugin_Option_StringRestriction::ByteSizeLong(const MessageLite& base) {
          const Plugin_Option_StringRestriction& this_ = static_cast<const Plugin_Option_StringRestriction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Plugin_Option_StringRestriction::ByteSizeLong() const {
          const Plugin_Option_StringRestriction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:metadata.Plugin.Option.StringRestriction)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // required string value = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
            // required string name = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Plugin_Option_StringRestriction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Plugin_Option_StringRestriction*>(&to_msg);
  auto& from = static_cast<const Plugin_Option_StringRestriction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:metadata.Plugin.Option.StringRestriction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_value(from._internal_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_name(from._internal_name());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Plugin_Option_StringRestriction::CopyFrom(const Plugin_Option_StringRestriction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metadata.Plugin.Option.StringRestriction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Plugin_Option_StringRestriction::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const Plugin_Option_StringRestriction&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Plugin_Option_StringRestriction::InternalSwap(Plugin_Option_StringRestriction* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata Plugin_Option_StringRestriction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Plugin_Option::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Plugin_Option>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000011) ^ 0x00000011) != 0;
  }
};

Plugin_Option::Plugin_Option(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metadata.Plugin.Option)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Option::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::metadata::Plugin_Option& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        default_value_{visibility, arena, from.default_value_},
        int_desc_{visibility, arena, from.int_desc_},
        str_restriction_{visibility, arena, from.str_restriction_},
        name_(arena, from.name_),
        short_desc_(arena, from.short_desc_),
        long_desc_(arena, from.long_desc_),
        hints_(arena, from.hints_) {}

Plugin_Option::Plugin_Option(
    ::google::protobuf::Arena* arena,
    const Plugin_Option& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Plugin_Option* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, subgroup_id_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::subgroup_id_));

  // @@protoc_insertion_point(copy_constructor:metadata.Plugin.Option)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Option::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        default_value_{visibility, arena},
        int_desc_{visibility, arena},
        str_restriction_{visibility, arena},
        name_(arena),
        short_desc_(arena),
        long_desc_(arena),
        hints_(arena),
        sort_start_{-1},
        group_id_{-1},
        subgroup_id_{-1} {}

inline void Plugin_Option::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, nodelay_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::nodelay_));
}
Plugin_Option::~Plugin_Option() {
  // @@protoc_insertion_point(destructor:metadata.Plugin.Option)
  SharedDtor(*this);
}
inline void Plugin_Option::SharedDtor(MessageLite& self) {
  Plugin_Option& this_ = static_cast<Plugin_Option&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.short_desc_.Destroy();
  this_._impl_.long_desc_.Destroy();
  this_._impl_.hints_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Plugin_Option::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Plugin_Option(arena);
}
constexpr auto Plugin_Option::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.default_value_) +
          decltype(Plugin_Option::_impl_.default_value_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.int_desc_) +
          decltype(Plugin_Option::_impl_.int_desc_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.str_restriction_) +
          decltype(Plugin_Option::_impl_.str_restriction_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Plugin_Option), alignof(Plugin_Option), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Plugin_Option::PlacementNew_,
                                 sizeof(Plugin_Option),
                                 alignof(Plugin_Option));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Plugin_Option::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Plugin_Option_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        Plugin_Option::IsInitializedImpl,
        &Plugin_Option::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Plugin_Option>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Plugin_Option::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Plugin_Option>(), &Plugin_Option::ByteSizeLong,
            &Plugin_Option::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_._cached_size_),
        false,
    },
    &Plugin_Option::kDescriptorMethods,
    &descriptor_table_compizconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Plugin_Option::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 22, 5, 75, 2> Plugin_Option::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_._has_bits_),
    0, // no _extensions_
    22, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4290772992,  // skipmap
    offsetof(decltype(_table_), field_entries),
    22,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metadata::Plugin_Option>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.name_)}},
    // required .metadata.Plugin.Option.Type type = 2;
    {::_pbi::TcParser::FastEr0S1,
     {16, 4, 11, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.type_)}},
    // optional .metadata.Plugin.Option.Type list_type = 3;
    {::_pbi::TcParser::FastEr0S1,
     {24, 5, 11, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.list_type_)}},
    // optional string short_desc = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.short_desc_)}},
    // optional string long_desc = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.long_desc_)}},
    // optional sint32 group_id = 6 [default = -1];
    {::_pbi::TcParser::FastZ32S1,
     {48, 17, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.group_id_)}},
    // optional sint32 subgroup_id = 7 [default = -1];
    {::_pbi::TcParser::FastZ32S1,
     {56, 18, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.subgroup_id_)}},
    // optional bool read_only = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Plugin_Option, _impl_.read_only_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.read_only_)}},
    // optional bool extensible = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Plugin_Option, _impl_.extensible_), 9>(),
     {72, 9, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.extensible_)}},
    // optional sint32 sort_start = 10 [default = -1];
    {::_pbi::TcParser::FastZ32S1,
     {80, 16, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.sort_start_)}},
    // repeated .metadata.Plugin.Option.GenericValue default_value = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.default_value_)}},
    // optional sint32 int_min = 12;
    {::_pbi::TcParser::FastZ32S1,
     {96, 6, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.int_min_)}},
    // optional sint32 int_max = 13;
    {::_pbi::TcParser::FastZ32S1,
     {104, 7, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.int_max_)}},
    // repeated .metadata.Plugin.Option.IntDescription int_desc = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 1, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.int_desc_)}},
    // optional float float_min = 15;
    {::_pbi::TcParser::FastF32S1,
     {125, 12, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.float_min_)}},
    // optional float float_max = 16;
    {::_pbi::TcParser::FastF32S2,
     {389, 13, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.float_max_)}},
    // optional float precision = 17;
    {::_pbi::TcParser::FastF32S2,
     {397, 14, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.precision_)}},
    // repeated .metadata.Plugin.Option.StringRestriction str_restriction = 18;
    {::_pbi::TcParser::FastMtR2,
     {402, 63, 2, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.str_restriction_)}},
    // optional string hints = 19;
    {::_pbi::TcParser::FastSS2,
     {410, 3, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.hints_)}},
    // optional bool passive_grab = 20;
    {::_pbi::TcParser::FastV8S2,
     {416, 10, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.passive_grab_)}},
    // optional bool internal = 21;
    {::_pbi::TcParser::FastV8S2,
     {424, 11, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.internal_)}},
    // optional bool nodelay = 22;
    {::_pbi::TcParser::FastV8S2,
     {432, 15, 0, PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.nodelay_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string name = 1;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required .metadata.Plugin.Option.Type type = 2;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.type_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .metadata.Plugin.Option.Type list_type = 3;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.list_type_), _Internal::kHasBitsOffset + 5, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string short_desc = 4;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.short_desc_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string long_desc = 5;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.long_desc_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional sint32 group_id = 6 [default = -1];
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.group_id_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional sint32 subgroup_id = 7 [default = -1];
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.subgroup_id_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional bool read_only = 8;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.read_only_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool extensible = 9;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.extensible_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional sint32 sort_start = 10 [default = -1];
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.sort_start_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // repeated .metadata.Plugin.Option.GenericValue default_value = 11;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.default_value_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional sint32 int_min = 12;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.int_min_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional sint32 int_max = 13;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.int_max_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // repeated .metadata.Plugin.Option.IntDescription int_desc = 14;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.int_desc_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional float float_min = 15;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.float_min_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float float_max = 16;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.float_max_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float precision = 17;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.precision_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .metadata.Plugin.Option.StringRestriction str_restriction = 18;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.str_restriction_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string hints = 19;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.hints_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool passive_grab = 20;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.passive_grab_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool internal = 21;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.internal_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool nodelay = 22;
    {PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.nodelay_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::metadata::Plugin_Option_GenericValue>()},
    {::_pbi::TcParser::GetTable<::metadata::Plugin_Option_IntDescription>()},
    {::_pbi::TcParser::GetTable<::metadata::Plugin_Option_StringRestriction>()},
    {0, 12},
    {0, 12},
  }}, {{
    "\26\4\0\0\12\11\0\0\0\0\0\0\0\0\0\0\0\0\0\5\0\0\0\0"
    "metadata.Plugin.Option"
    "name"
    "short_desc"
    "long_desc"
    "hints"
  }},
};

PROTOBUF_NOINLINE void Plugin_Option::Clear() {
// @@protoc_insertion_point(message_clear_start:metadata.Plugin.Option)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.default_value_.Clear();
  _impl_.int_desc_.Clear();
  _impl_.str_restriction_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.short_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.long_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.hints_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.int_max_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.int_max_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.read_only_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.nodelay_) -
        reinterpret_cast<char*>(&_impl_.read_only_)) + sizeof(_impl_.nodelay_));
  }
  if (cached_has_bits & 0x00070000u) {
    _impl_.sort_start_ = -1;
    _impl_.group_id_ = -1;
    _impl_.subgroup_id_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Plugin_Option::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Plugin_Option& this_ = static_cast<const Plugin_Option&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Plugin_Option::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Plugin_Option& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:metadata.Plugin.Option)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required string name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Option.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // required .metadata.Plugin.Option.Type type = 2;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_type(), target);
          }

          // optional .metadata.Plugin.Option.Type list_type = 3;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_list_type(), target);
          }

          // optional string short_desc = 4;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_short_desc();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Option.short_desc");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // optional string long_desc = 5;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_long_desc();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Option.long_desc");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // optional sint32 group_id = 6 [default = -1];
          if (cached_has_bits & 0x00020000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                6, this_._internal_group_id(), target);
          }

          // optional sint32 subgroup_id = 7 [default = -1];
          if (cached_has_bits & 0x00040000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                7, this_._internal_subgroup_id(), target);
          }

          // optional bool read_only = 8;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_read_only(), target);
          }

          // optional bool extensible = 9;
          if (cached_has_bits & 0x00000200u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_extensible(), target);
          }

          // optional sint32 sort_start = 10 [default = -1];
          if (cached_has_bits & 0x00010000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                10, this_._internal_sort_start(), target);
          }

          // repeated .metadata.Plugin.Option.GenericValue default_value = 11;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_default_value_size());
               i < n; i++) {
            const auto& repfield = this_._internal_default_value().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    11, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional sint32 int_min = 12;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                12, this_._internal_int_min(), target);
          }

          // optional sint32 int_max = 13;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
                13, this_._internal_int_max(), target);
          }

          // repeated .metadata.Plugin.Option.IntDescription int_desc = 14;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_int_desc_size());
               i < n; i++) {
            const auto& repfield = this_._internal_int_desc().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    14, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional float float_min = 15;
          if (cached_has_bits & 0x00001000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                15, this_._internal_float_min(), target);
          }

          // optional float float_max = 16;
          if (cached_has_bits & 0x00002000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                16, this_._internal_float_max(), target);
          }

          // optional float precision = 17;
          if (cached_has_bits & 0x00004000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                17, this_._internal_precision(), target);
          }

          // repeated .metadata.Plugin.Option.StringRestriction str_restriction = 18;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_str_restriction_size());
               i < n; i++) {
            const auto& repfield = this_._internal_str_restriction().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    18, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional string hints = 19;
          if (cached_has_bits & 0x00000008u) {
            const std::string& _s = this_._internal_hints();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Option.hints");
            target = stream->WriteStringMaybeAliased(19, _s, target);
          }

          // optional bool passive_grab = 20;
          if (cached_has_bits & 0x00000400u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                20, this_._internal_passive_grab(), target);
          }

          // optional bool internal = 21;
          if (cached_has_bits & 0x00000800u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                21, this_._internal_internal(), target);
          }

          // optional bool nodelay = 22;
          if (cached_has_bits & 0x00008000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                22, this_._internal_nodelay(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:metadata.Plugin.Option)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Plugin_Option::ByteSizeLong(const MessageLite& base) {
          const Plugin_Option& this_ = static_cast<const Plugin_Option&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Plugin_Option::ByteSizeLong() const {
          const Plugin_Option& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:metadata.Plugin.Option)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .metadata.Plugin.Option.GenericValue default_value = 11;
            {
              total_size += 1UL * this_._internal_default_value_size();
              for (const auto& msg : this_._internal_default_value()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .metadata.Plugin.Option.IntDescription int_desc = 14;
            {
              total_size += 1UL * this_._internal_int_desc_size();
              for (const auto& msg : this_._internal_int_desc()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .metadata.Plugin.Option.StringRestriction str_restriction = 18;
            {
              total_size += 2UL * this_._internal_str_restriction_size();
              for (const auto& msg : this_._internal_str_restriction()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // required string name = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          if (cached_has_bits & 0x0000000eu) {
            // optional string short_desc = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_short_desc());
            }
            // optional string long_desc = 5;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_long_desc());
            }
            // optional string hints = 19;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hints());
            }
          }
           {
            // required .metadata.Plugin.Option.Type type = 2;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          if (cached_has_bits & 0x000000e0u) {
            // optional .metadata.Plugin.Option.Type list_type = 3;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_list_type());
            }
            // optional sint32 int_min = 12;
            if (cached_has_bits & 0x00000040u) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_int_min());
            }
            // optional sint32 int_max = 13;
            if (cached_has_bits & 0x00000080u) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_int_max());
            }
          }
          if (cached_has_bits & 0x0000ff00u) {
            // optional bool read_only = 8;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2;
            }
            // optional bool extensible = 9;
            if (cached_has_bits & 0x00000200u) {
              total_size += 2;
            }
            // optional bool passive_grab = 20;
            if (cached_has_bits & 0x00000400u) {
              total_size += 3;
            }
            // optional bool internal = 21;
            if (cached_has_bits & 0x00000800u) {
              total_size += 3;
            }
            // optional float float_min = 15;
            if (cached_has_bits & 0x00001000u) {
              total_size += 5;
            }
            // optional float float_max = 16;
            if (cached_has_bits & 0x00002000u) {
              total_size += 6;
            }
            // optional float precision = 17;
            if (cached_has_bits & 0x00004000u) {
              total_size += 6;
            }
            // optional bool nodelay = 22;
            if (cached_has_bits & 0x00008000u) {
              total_size += 3;
            }
          }
          if (cached_has_bits & 0x00070000u) {
            // optional sint32 sort_start = 10 [default = -1];
            if (cached_has_bits & 0x00010000u) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_sort_start());
            }
            // optional sint32 group_id = 6 [default = -1];
            if (cached_has_bits & 0x00020000u) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_group_id());
            }
            // optional sint32 subgroup_id = 7 [default = -1];
            if (cached_has_bits & 0x00040000u) {
              total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(
                  this_._internal_subgroup_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Plugin_Option::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Plugin_Option*>(&to_msg);
  auto& from = static_cast<const Plugin_Option&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:metadata.Plugin.Option)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_default_value()->MergeFrom(
      from._internal_default_value());
  _this->_internal_mutable_int_desc()->MergeFrom(
      from._internal_int_desc());
  _this->_internal_mutable_str_restriction()->MergeFrom(
      from._internal_str_restriction());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_short_desc(from._internal_short_desc());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_long_desc(from._internal_long_desc());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_hints(from._internal_hints());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.list_type_ = from._impl_.list_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.int_min_ = from._impl_.int_min_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.int_max_ = from._impl_.int_max_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.read_only_ = from._impl_.read_only_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.extensible_ = from._impl_.extensible_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.passive_grab_ = from._impl_.passive_grab_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.internal_ = from._impl_.internal_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.float_min_ = from._impl_.float_min_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.float_max_ = from._impl_.float_max_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.precision_ = from._impl_.precision_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.nodelay_ = from._impl_.nodelay_;
    }
  }
  if (cached_has_bits & 0x00070000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.sort_start_ = from._impl_.sort_start_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.group_id_ = from._impl_.group_id_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.subgroup_id_ = from._impl_.subgroup_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Plugin_Option::CopyFrom(const Plugin_Option& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metadata.Plugin.Option)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Plugin_Option::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const Plugin_Option&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_int_desc()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_str_restriction()))
    return false;
  return true;
}

void Plugin_Option::InternalSwap(Plugin_Option* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.default_value_.InternalSwap(&other->_impl_.default_value_);
  _impl_.int_desc_.InternalSwap(&other->_impl_.int_desc_);
  _impl_.str_restriction_.InternalSwap(&other->_impl_.str_restriction_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.short_desc_, &other->_impl_.short_desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.long_desc_, &other->_impl_.long_desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hints_, &other->_impl_.hints_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.subgroup_id_)
      + sizeof(Plugin_Option::_impl_.subgroup_id_)
      - PROTOBUF_FIELD_OFFSET(Plugin_Option, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata Plugin_Option::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Plugin_Extension::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Plugin_Extension>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Plugin_Extension, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Plugin_Extension::Plugin_Extension(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metadata.Plugin.Extension)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Extension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::metadata::Plugin_Extension& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        base_option_{visibility, arena, from.base_option_},
        str_restriction_{visibility, arena, from.str_restriction_},
        base_plugin_(arena, from.base_plugin_) {}

Plugin_Extension::Plugin_Extension(
    ::google::protobuf::Arena* arena,
    const Plugin_Extension& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Plugin_Extension* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:metadata.Plugin.Extension)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Extension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        base_option_{visibility, arena},
        str_restriction_{visibility, arena},
        base_plugin_(arena) {}

inline void Plugin_Extension::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Plugin_Extension::~Plugin_Extension() {
  // @@protoc_insertion_point(destructor:metadata.Plugin.Extension)
  SharedDtor(*this);
}
inline void Plugin_Extension::SharedDtor(MessageLite& self) {
  Plugin_Extension& this_ = static_cast<Plugin_Extension&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.base_plugin_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Plugin_Extension::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Plugin_Extension(arena);
}
constexpr auto Plugin_Extension::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Plugin_Extension, _impl_.base_option_) +
          decltype(Plugin_Extension::_impl_.base_option_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Plugin_Extension, _impl_.str_restriction_) +
          decltype(Plugin_Extension::_impl_.str_restriction_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Plugin_Extension), alignof(Plugin_Extension), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Plugin_Extension::PlacementNew_,
                                 sizeof(Plugin_Extension),
                                 alignof(Plugin_Extension));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Plugin_Extension::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Plugin_Extension_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        Plugin_Extension::IsInitializedImpl,
        &Plugin_Extension::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Plugin_Extension>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Plugin_Extension::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Plugin_Extension>(), &Plugin_Extension::ByteSizeLong,
            &Plugin_Extension::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Plugin_Extension, _impl_._cached_size_),
        false,
    },
    &Plugin_Extension::kDescriptorMethods,
    &descriptor_table_compizconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Plugin_Extension::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 56, 2> Plugin_Extension::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Plugin_Extension, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metadata::Plugin_Extension>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string base_plugin = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Plugin_Extension, _impl_.base_plugin_)}},
    // repeated string base_option = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Plugin_Extension, _impl_.base_option_)}},
    // repeated .metadata.Plugin.Option.StringRestriction str_restriction = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Plugin_Extension, _impl_.str_restriction_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string base_plugin = 1;
    {PROTOBUF_FIELD_OFFSET(Plugin_Extension, _impl_.base_plugin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string base_option = 2;
    {PROTOBUF_FIELD_OFFSET(Plugin_Extension, _impl_.base_option_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated .metadata.Plugin.Option.StringRestriction str_restriction = 3;
    {PROTOBUF_FIELD_OFFSET(Plugin_Extension, _impl_.str_restriction_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::metadata::Plugin_Option_StringRestriction>()},
  }}, {{
    "\31\13\13\0\0\0\0\0"
    "metadata.Plugin.Extension"
    "base_plugin"
    "base_option"
  }},
};

PROTOBUF_NOINLINE void Plugin_Extension::Clear() {
// @@protoc_insertion_point(message_clear_start:metadata.Plugin.Extension)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.base_option_.Clear();
  _impl_.str_restriction_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.base_plugin_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Plugin_Extension::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Plugin_Extension& this_ = static_cast<const Plugin_Extension&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Plugin_Extension::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Plugin_Extension& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:metadata.Plugin.Extension)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required string base_plugin = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_base_plugin();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Extension.base_plugin");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string base_option = 2;
          for (int i = 0, n = this_._internal_base_option_size(); i < n; ++i) {
            const auto& s = this_._internal_base_option().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Extension.base_option");
            target = stream->WriteString(2, s, target);
          }

          // repeated .metadata.Plugin.Option.StringRestriction str_restriction = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_str_restriction_size());
               i < n; i++) {
            const auto& repfield = this_._internal_str_restriction().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:metadata.Plugin.Extension)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Plugin_Extension::ByteSizeLong(const MessageLite& base) {
          const Plugin_Extension& this_ = static_cast<const Plugin_Extension&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Plugin_Extension::ByteSizeLong() const {
          const Plugin_Extension& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:metadata.Plugin.Extension)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string base_option = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_base_option().size());
              for (int i = 0, n = this_._internal_base_option().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_base_option().Get(i));
              }
            }
            // repeated .metadata.Plugin.Option.StringRestriction str_restriction = 3;
            {
              total_size += 1UL * this_._internal_str_restriction_size();
              for (const auto& msg : this_._internal_str_restriction()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // required string base_plugin = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_base_plugin());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Plugin_Extension::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Plugin_Extension*>(&to_msg);
  auto& from = static_cast<const Plugin_Extension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:metadata.Plugin.Extension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_base_option()->MergeFrom(from._internal_base_option());
  _this->_internal_mutable_str_restriction()->MergeFrom(
      from._internal_str_restriction());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_base_plugin(from._internal_base_plugin());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Plugin_Extension::CopyFrom(const Plugin_Extension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metadata.Plugin.Extension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Plugin_Extension::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const Plugin_Extension&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_str_restriction()))
    return false;
  return true;
}

void Plugin_Extension::InternalSwap(Plugin_Extension* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.base_option_.InternalSwap(&other->_impl_.base_option_);
  _impl_.str_restriction_.InternalSwap(&other->_impl_.str_restriction_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.base_plugin_, &other->_impl_.base_plugin_, arena);
}

::google::protobuf::Metadata Plugin_Extension::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Plugin_Screen::_Internal {
 public:
};

Plugin_Screen::Plugin_Screen(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metadata.Plugin.Screen)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Screen::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::metadata::Plugin_Screen& from_msg)
      : option_{visibility, arena, from.option_},
        group_desc_{visibility, arena, from.group_desc_},
        subgroup_desc_{visibility, arena, from.subgroup_desc_},
        _cached_size_{0} {}

Plugin_Screen::Plugin_Screen(
    ::google::protobuf::Arena* arena,
    const Plugin_Screen& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Plugin_Screen* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:metadata.Plugin.Screen)
}
inline PROTOBUF_NDEBUG_INLINE Plugin_Screen::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : option_{visibility, arena},
        group_desc_{visibility, arena},
        subgroup_desc_{visibility, arena},
        _cached_size_{0} {}

inline void Plugin_Screen::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Plugin_Screen::~Plugin_Screen() {
  // @@protoc_insertion_point(destructor:metadata.Plugin.Screen)
  SharedDtor(*this);
}
inline void Plugin_Screen::SharedDtor(MessageLite& self) {
  Plugin_Screen& this_ = static_cast<Plugin_Screen&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Plugin_Screen::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Plugin_Screen(arena);
}
constexpr auto Plugin_Screen::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Plugin_Screen, _impl_.option_) +
          decltype(Plugin_Screen::_impl_.option_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Plugin_Screen, _impl_.group_desc_) +
          decltype(Plugin_Screen::_impl_.group_desc_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Plugin_Screen, _impl_.subgroup_desc_) +
          decltype(Plugin_Screen::_impl_.subgroup_desc_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Plugin_Screen), alignof(Plugin_Screen), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Plugin_Screen::PlacementNew_,
                                 sizeof(Plugin_Screen),
                                 alignof(Plugin_Screen));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Plugin_Screen::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Plugin_Screen_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        Plugin_Screen::IsInitializedImpl,
        &Plugin_Screen::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Plugin_Screen>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Plugin_Screen::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Plugin_Screen>(), &Plugin_Screen::ByteSizeLong,
            &Plugin_Screen::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Plugin_Screen, _impl_._cached_size_),
        false,
    },
    &Plugin_Screen::kDescriptorMethods,
    &descriptor_table_compizconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Plugin_Screen::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 54, 2> Plugin_Screen::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metadata::Plugin_Screen>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .metadata.Plugin.Option option = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Plugin_Screen, _impl_.option_)}},
    // repeated string group_desc = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Plugin_Screen, _impl_.group_desc_)}},
    // repeated string subgroup_desc = 3;
    {::_pbi::TcParser::FastSR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Plugin_Screen, _impl_.subgroup_desc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .metadata.Plugin.Option option = 1;
    {PROTOBUF_FIELD_OFFSET(Plugin_Screen, _impl_.option_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string group_desc = 2;
    {PROTOBUF_FIELD_OFFSET(Plugin_Screen, _impl_.group_desc_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string subgroup_desc = 3;
    {PROTOBUF_FIELD_OFFSET(Plugin_Screen, _impl_.subgroup_desc_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::metadata::Plugin_Option>()},
  }}, {{
    "\26\0\12\15\0\0\0\0"
    "metadata.Plugin.Screen"
    "group_desc"
    "subgroup_desc"
  }},
};

PROTOBUF_NOINLINE void Plugin_Screen::Clear() {
// @@protoc_insertion_point(message_clear_start:metadata.Plugin.Screen)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.option_.Clear();
  _impl_.group_desc_.Clear();
  _impl_.subgroup_desc_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Plugin_Screen::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Plugin_Screen& this_ = static_cast<const Plugin_Screen&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Plugin_Screen::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Plugin_Screen& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:metadata.Plugin.Screen)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .metadata.Plugin.Option option = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_option_size());
               i < n; i++) {
            const auto& repfield = this_._internal_option().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string group_desc = 2;
          for (int i = 0, n = this_._internal_group_desc_size(); i < n; ++i) {
            const auto& s = this_._internal_group_desc().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Screen.group_desc");
            target = stream->WriteString(2, s, target);
          }

          // repeated string subgroup_desc = 3;
          for (int i = 0, n = this_._internal_subgroup_desc_size(); i < n; ++i) {
            const auto& s = this_._internal_subgroup_desc().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "metadata.Plugin.Screen.subgroup_desc");
            target = stream->WriteString(3, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:metadata.Plugin.Screen)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Plugin_Screen::ByteSizeLong(const MessageLite& base) {
          const Plugin_Screen& this_ = static_cast<const Plugin_Screen&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Plugin_Screen::ByteSizeLong() const {
          const Plugin_Screen& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:metadata.Plugin.Screen)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .metadata.Plugin.Option option = 1;
            {
              total_size += 1UL * this_._internal_option_size();
              for (const auto& msg : this_._internal_option()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string group_desc = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_group_desc().size());
              for (int i = 0, n = this_._internal_group_desc().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_group_desc().Get(i));
              }
            }
            // repeated string subgroup_desc = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_subgroup_desc().size());
              for (int i = 0, n = this_._internal_subgroup_desc().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_subgroup_desc().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Plugin_Screen::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Plugin_Screen*>(&to_msg);
  auto& from = static_cast<const Plugin_Screen&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:metadata.Plugin.Screen)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_option()->MergeFrom(
      from._internal_option());
  _this->_internal_mutable_group_desc()->MergeFrom(from._internal_group_desc());
  _this->_internal_mutable_subgroup_desc()->MergeFrom(from._internal_subgroup_desc());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Plugin_Screen::CopyFrom(const Plugin_Screen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metadata.Plugin.Screen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Plugin_Screen::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const Plugin_Screen&>(msg);
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_option()))
    return false;
  return true;
}

void Plugin_Screen::InternalSwap(Plugin_Screen* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.option_.InternalSwap(&other->_impl_.option_);
  _impl_.group_desc_.InternalSwap(&other->_impl_.group_desc_);
  _impl_.subgroup_desc_.InternalSwap(&other->_impl_.subgroup_desc_);
}

::google::protobuf::Metadata Plugin_Screen::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Plugin::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Plugin>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Plugin, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Plugin::Plugin(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:metadata.Plugin)
}
inline PROTOBUF_NDEBUG_INLINE Plugin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::metadata::Plugin& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extension_{visibility, arena, from.extension_} {}

Plugin::Plugin(
    ::google::protobuf::Arena* arena,
    const Plugin& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Plugin* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::metadata::PluginInfo>(
                              arena, *from._impl_.info_)
                        : nullptr;
  _impl_.screen_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::metadata::Plugin_Screen>(
                              arena, *from._impl_.screen_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:metadata.Plugin)
}
inline PROTOBUF_NDEBUG_INLINE Plugin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        extension_{visibility, arena} {}

inline void Plugin::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, info_),
           0,
           offsetof(Impl_, screen_) -
               offsetof(Impl_, info_) +
               sizeof(Impl_::screen_));
}
Plugin::~Plugin() {
  // @@protoc_insertion_point(destructor:metadata.Plugin)
  SharedDtor(*this);
}
inline void Plugin::SharedDtor(MessageLite& self) {
  Plugin& this_ = static_cast<Plugin&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.info_;
  delete this_._impl_.screen_;
  this_._impl_.~Impl_();
}

inline void* Plugin::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Plugin(arena);
}
constexpr auto Plugin::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Plugin, _impl_.extension_) +
          decltype(Plugin::_impl_.extension_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Plugin), alignof(Plugin), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Plugin::PlacementNew_,
                                 sizeof(Plugin),
                                 alignof(Plugin));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Plugin::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Plugin_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        Plugin::IsInitializedImpl,
        &Plugin::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Plugin>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Plugin::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Plugin>(), &Plugin::ByteSizeLong,
            &Plugin::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Plugin, _impl_._cached_size_),
        false,
    },
    &Plugin::kDescriptorMethods,
    &descriptor_table_compizconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Plugin::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Plugin::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Plugin, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::metadata::Plugin>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .metadata.PluginInfo info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Plugin, _impl_.info_)}},
    // optional .metadata.Plugin.Screen screen = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Plugin, _impl_.screen_)}},
    // repeated .metadata.Plugin.Extension extension = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Plugin, _impl_.extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .metadata.PluginInfo info = 1;
    {PROTOBUF_FIELD_OFFSET(Plugin, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .metadata.Plugin.Screen screen = 2;
    {PROTOBUF_FIELD_OFFSET(Plugin, _impl_.screen_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .metadata.Plugin.Extension extension = 3;
    {PROTOBUF_FIELD_OFFSET(Plugin, _impl_.extension_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::metadata::PluginInfo>()},
    {::_pbi::TcParser::GetTable<::metadata::Plugin_Screen>()},
    {::_pbi::TcParser::GetTable<::metadata::Plugin_Extension>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Plugin::Clear() {
// @@protoc_insertion_point(message_clear_start:metadata.Plugin)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extension_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.info_ != nullptr);
      _impl_.info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.screen_ != nullptr);
      _impl_.screen_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Plugin::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Plugin& this_ = static_cast<const Plugin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Plugin::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Plugin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:metadata.Plugin)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .metadata.PluginInfo info = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.info_, this_._impl_.info_->GetCachedSize(), target,
                stream);
          }

          // optional .metadata.Plugin.Screen screen = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.screen_, this_._impl_.screen_->GetCachedSize(), target,
                stream);
          }

          // repeated .metadata.Plugin.Extension extension = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_extension_size());
               i < n; i++) {
            const auto& repfield = this_._internal_extension().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:metadata.Plugin)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Plugin::ByteSizeLong(const MessageLite& base) {
          const Plugin& this_ = static_cast<const Plugin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Plugin::ByteSizeLong() const {
          const Plugin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:metadata.Plugin)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .metadata.Plugin.Extension extension = 3;
            {
              total_size += 1UL * this_._internal_extension_size();
              for (const auto& msg : this_._internal_extension()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // required .metadata.PluginInfo info = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.info_);
            }
          }
           {
            // optional .metadata.Plugin.Screen screen = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.screen_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Plugin::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Plugin*>(&to_msg);
  auto& from = static_cast<const Plugin&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:metadata.Plugin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extension()->MergeFrom(
      from._internal_extension());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.info_ != nullptr);
      if (_this->_impl_.info_ == nullptr) {
        _this->_impl_.info_ =
            ::google::protobuf::Message::CopyConstruct<::metadata::PluginInfo>(arena, *from._impl_.info_);
      } else {
        _this->_impl_.info_->MergeFrom(*from._impl_.info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.screen_ != nullptr);
      if (_this->_impl_.screen_ == nullptr) {
        _this->_impl_.screen_ =
            ::google::protobuf::Message::CopyConstruct<::metadata::Plugin_Screen>(arena, *from._impl_.screen_);
      } else {
        _this->_impl_.screen_->MergeFrom(*from._impl_.screen_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Plugin::CopyFrom(const Plugin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metadata.Plugin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Plugin::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const Plugin&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_extension()))
    return false;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.info_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.screen_->IsInitialized()) return false;
  }
  return true;
}

void Plugin::InternalSwap(Plugin* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extension_.InternalSwap(&other->_impl_.extension_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Plugin, _impl_.screen_)
      + sizeof(Plugin::_impl_.screen_)
      - PROTOBUF_FIELD_OFFSET(Plugin, _impl_.info_)>(
          reinterpret_cast<char*>(&_impl_.info_),
          reinterpret_cast<char*>(&other->_impl_.info_));
}

::google::protobuf::Metadata Plugin::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace metadata
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_compizconfig_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
